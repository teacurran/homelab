services:
  influxdb:
    restart: always
    image: influxdb:2
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    env_file: .env
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED}
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - DOCKER_INFLUXDB_INIT_RETENTION=16w

  chronograf:
    image: chronograf:latest
    restart: always
    ports:
      - '8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    env_file: .env
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - influxdb
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel

  unpoller:
    restart: always
    image: ghcr.io/unpoller/unpoller:latest
    depends_on:
      - grafana
      - influxdb
      - chronograf
    env_file: .env
    environment:
      - UP_INFLUXDB_DB=${INFLUXDB_DB}
      - UP_INFLUXDB_USER=${INFLUXDB_ADMIN_USER}
      - UP_INFLUXDB_PASS=${INFLUXDB_ADMIN_PASSWORD}
      - UP_INFLUXDB_ORG=${INFLUXDB_ORG}
      - UP_INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - UP_INFLUXDB_AUTH_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - UP_INFLUXDB_URL=http://influxdb:8086
      - UP_UNIFI_DEFAULT_USER=${UNIFI_USER}
      - UP_UNIFI_DEFAULT_PASS=${UNIFI_PASS}
      - UP_UNIFI_DEFAULT_URL=${UNIFI_URL}
      - UP_POLLER_DEBUG=${POLLER_DEBUG}
      - UP_UNIFI_DEFAULT_SAVE_DPI=${POLLER_SAVE_DPI}
    volumes:
      - ./unpoller/up.conf:/etc/unpoller/up.conf
  
  suitecrmdb:
    profiles: [experimental]
    image: docker.io/bitnami/mariadb:11.4
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_USER=bn_suitecrm
      - MARIADB_DATABASE=bitnami_suitecrm
      - MARIADB_PASSWORD=bitnami123
    volumes:
      - suitecrmdb-storage:/bitnami/mariadb

  suitecrm:
    profiles: [experimental]
    image: docker.io/bitnami/suitecrm:8
    ports:
      - '8084:8080'
      - '8443:8443'
    environment:
      - SUITECRM_DATABASE_HOST=suitecrmdb
      - SUITECRM_DATABASE_PORT_NUMBER=3306
      - SUITECRM_DATABASE_USER=bn_suitecrm
      - SUITECRM_DATABASE_NAME=bitnami_suitecrm
      - SUITECRM_DATABASE_PASSWORD=bitnami123
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - suitecrm-data:/bitnami/suitecrm
    depends_on:
      - suitecrmdb

  keycloak:
    profiles: [experimental]
    image: quay.io/keycloak/keycloak:26.0
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
    ports:
      - "7080:7080"
      - "7443:7443"
    networks:
      - local_network

  solar2-livestream:
    image: tiangolo/nginx-rtmp
    container_name: nginx-rtmp
    # ports:
    #   - "1935:1935" # RTMP port
    volumes:
      - ./solar2-livestream/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

  solar2-encoder:
    image: jrottenberg/ffmpeg:7.1-alpine320
    container_name: ffmpeg-stream
    restart: always
    depends_on:
      - solar2-livestream
    command: >
      -rtsp_transport tcp 
      -i rtsp://10.10.0.1:7447/goPY7RmpQd5UbM1L 
      -c:v libx264 -preset veryfast -b:v 4500k -maxrate 4500k -bufsize 9000k 
      -c:a aac -b:a 128k 
      -f flv rtmp://solar2-livestream/live

volumes:
  influxdb-storage:
  chronograf-storage:
  grafana-storage:
  suitecrmdb-storage:
  suitecrm-data:
  database-data:
